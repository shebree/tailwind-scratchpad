/* you can remove the styling on the root here as it looks like it was part of the boilerplate starter and is conflicting with map rendering. */

#root {
	/* max-width: 1280px; */
	/* margin: 0 auto; */
	/* padding: 2rem; */
	/* text-align: center; */
}

/* The other css classes here are also part of the boilerplate starter so can be removed. */

/* .logo {
	height: 6em;
	padding: 1.5em;
	will-change: filter;
	transition: filter 300ms;
}
.logo:hover {
	filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
	filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
}

@media (prefers-reduced-motion: no-preference) {
	a:nth-of-type(2) .logo {
		animation: logo-spin infinite 20s linear;
	}
}

.card {
	padding: 2em;
}

.read-the-docs {
	color: #888;
} */

/* This styling will work and is the traditional CSS way. But since this is a tailwind project, the mental model is to move your styling inside the relevant component, where the rest of the markup and business logic is, and directly use tailwind's utitlity classes there e.g. `MapComponent.tsx` */

/* .map-wrap {
	position: relative;
	width: 100%;
	height: 100%;
}

.map {
	position: relative;
	width: 100%;
	height: 100%;
} */
